/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \group qml-sensors
    \title QML Sensors API Plugin
    QML Support for the QtMobility Project Sensors API.
*/

/*!
    \page qml-sensors.html

    \title Sensors QML Plugin

    \brief A QML plugin for the QtMobility Project Sensors API.

    \section1 Overview

    The QML Sensors Plugin provides an easy to use interface to the Sensors API.
    It enables us to receive sensor events and to read current values from
    sensors.

    The plugin contains many sensor types and access functions to read values
    from them. As an example consider the orientation sensor. The orientation
    example simply displays text on-screen to show the current orientation.

    The QML code that reads the value is quite simple. Here we see a QML component
    \i orientation declared which is an \l OrientationSensor element. First
    the sensor is started by setting the \l {Sensor::active}{active} property
    to \i true. The element receives a signal when the reading changes and it
    is picked up by the \i onReadingChanged slot. Now the
    \l {OrientationSensor::reading}{reading} property of this element can be
    used to extract the current orientation so that it can be compared against
    the defined values of various orientations in the \l OrientationReading
    element.

    \qml
        OrientationSensor {
            id: orientation
            active: true

            onReadingChanged: {

                if (reading.orientation == OrientationReading.FaceUp)
                    content.state = "FaceUp";

                // ... more tests for different orientations ...
            }
        }

    \endqml

    Other sensors can be treated in a similar manner. For example, the \l Compass
    sensor could have almost identical coding

    \qml
        Compass {
            id: compass
            active: true

            onReadingChanged: {
                compassHeading.text = reading.azimuth;

                // ...
            }
        }
    \endqml

    \section1 QML Elements
    \annotatedlist qml-sensors_type
    \annotatedlist qml-sensors_reading

*/



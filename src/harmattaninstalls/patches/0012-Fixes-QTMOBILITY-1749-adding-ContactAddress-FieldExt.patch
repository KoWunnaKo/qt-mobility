From 0ef34985b48369325a730af34f03cc22ca0197bb Mon Sep 17 00:00:00 2001
From: Aleksandar Stojiljkovic <aleksandar.stojiljkovic@nokia.com>
Date: Fri, 29 Jul 2011 13:18:25 +0300
Subject: [PATCH] Fixes: QTMOBILITY-1749 - adding ContactAddress::FieldExtendedAddress and vcard parsing for it.

Maemo5 and Symbian support to be added in separate patches.
---
 doc/src/plugins/qml-contacts.qdoc                  |    1 +
 examples/samplephonebook/filterpage.cpp            |    1 +
 .../details/qdeclarativecontactaddress_p.h         |   14 +++++++++-
 .../contacts/qdeclarativecontactdetail.cpp         |    8 +++++
 src/contacts/details/qcontactaddress.h             |    4 +++
 src/contacts/details/qcontactdetails.cpp           |   28 ++++++++++++++++++++
 src/contacts/qcontactmanagerengine.cpp             |    1 +
 src/versit/qversitcontactexporter_p.cpp            |    3 +-
 src/versit/qversitcontactimporter_p.cpp            |    6 ++--
 tests/auto/qcontactdetails/tst_qcontactdetails.cpp |    3 ++
 .../tst_qversitcontactimporter.cpp                 |   22 +++++++++++++++
 11 files changed, 86 insertions(+), 5 deletions(-)

diff --git a/doc/src/plugins/qml-contacts.qdoc b/doc/src/plugins/qml-contacts.qdoc
index 19e0f56..8cb56db 100644
--- a/doc/src/plugins/qml-contacts.qdoc
+++ b/doc/src/plugins/qml-contacts.qdoc
@@ -144,6 +144,7 @@
             address.country:"My Country"
             address.subTypes:[Address.Postal, Address.Domestic]
             address.postOfficeBox:"1111"
+            address.extendedAddress:"Suite 2"
 
             Nickname {
                 nickname:"John"
diff --git a/examples/samplephonebook/filterpage.cpp b/examples/samplephonebook/filterpage.cpp
index 5b0b272..249b2e3 100644
--- a/examples/samplephonebook/filterpage.cpp
+++ b/examples/samplephonebook/filterpage.cpp
@@ -178,6 +178,7 @@ void FilterPage::filterClicked()
         addressFields << QContactAddress::FieldPostOfficeBox;
         addressFields << QContactAddress::FieldRegion;
         addressFields << QContactAddress::FieldStreet;
+        addressFields << QContactAddress::FieldExtendedAddress;
         foreach (const QString& fieldName, addressFields) {
             QContactDetailFilter subFilter;
             subFilter.setDetailDefinitionName(QContactAddress::DefinitionName, fieldName);
diff --git a/plugins/declarative/contacts/details/qdeclarativecontactaddress_p.h b/plugins/declarative/contacts/details/qdeclarativecontactaddress_p.h
index 6e8c403..d1bbc0f 100644
--- a/plugins/declarative/contacts/details/qdeclarativecontactaddress_p.h
+++ b/plugins/declarative/contacts/details/qdeclarativecontactaddress_p.h
@@ -59,6 +59,7 @@ class QDeclarativeContactAddress : public QDeclarativeContactDetail
     Q_PROPERTY(QString country READ country WRITE setCountry  NOTIFY fieldsChanged)
     Q_PROPERTY(QVariant subTypes READ subTypes WRITE setSubTypes NOTIFY fieldsChanged)
     Q_PROPERTY(QString postOfficeBox READ postOfficeBox WRITE setPostOfficeBox  NOTIFY fieldsChanged)
+    Q_PROPERTY(QString extendedAddress READ extendedAddress WRITE setExtendedAddress  NOTIFY fieldsChanged)
     Q_ENUMS(FieldType)
     Q_ENUMS(AddressSubType)
 public:
@@ -69,7 +70,8 @@ public:
         Postcode,
         Country,
         SubTypes,
-        PostOfficeBox
+        PostOfficeBox,
+        ExtendedAddress
     };
 
     enum AddressSubType {
@@ -108,6 +110,8 @@ public:
             return QContactAddress::FieldSubTypes;
         case PostOfficeBox:
             return QContactAddress::FieldPostOfficeBox;
+        case ExtendedAddress:
+            return QContactAddress::FieldExtendedAddress;
         default:
             break;
         }
@@ -162,6 +166,14 @@ public:
         }
     }
     QString postOfficeBox() const {return detail().value(QContactAddress::FieldPostOfficeBox);}
+    void setExtendedAddress(const QString& v)
+    {
+        if (!readOnly() && v != extendedAddress()) {
+            detail().setValue(QContactAddress::FieldExtendedAddress, v);
+            emit fieldsChanged();
+        }
+    }
+    QString extendedAddress() const {return detail().value(QContactAddress::FieldExtendedAddress);}
 
     void setSubTypes(const QVariant& subTypes)
     {
diff --git a/plugins/declarative/contacts/qdeclarativecontactdetail.cpp b/plugins/declarative/contacts/qdeclarativecontactdetail.cpp
index 750e628..b86098b 100644
--- a/plugins/declarative/contacts/qdeclarativecontactdetail.cpp
+++ b/plugins/declarative/contacts/qdeclarativecontactdetail.cpp
@@ -474,6 +474,14 @@ QString QDeclarativeContactDetail::fieldName(ContactDetailType detailType, int f
   This element is part of the \bold{QtMobility.contacts 1.1} module.
   */
 
+/*!
+  \qmlproperty string Address::extendedAddress
+
+  This property holds the extended address - a note or any data that is not needed for letters to arrive.
+
+  This element is part of the \bold{QtMobility.contacts 1.2} module.
+  */
+
 /* ==================== QDeclarativeContactAnniversary ======================= */
 
 /*!
diff --git a/src/contacts/details/qcontactaddress.h b/src/contacts/details/qcontactaddress.h
index 3a8d592..c7c48d0 100644
--- a/src/contacts/details/qcontactaddress.h
+++ b/src/contacts/details/qcontactaddress.h
@@ -64,6 +64,7 @@ public:
     static const QLatin1Constant FieldCountry;
     static const QLatin1Constant FieldSubTypes;
     static const QLatin1Constant FieldPostOfficeBox;
+    static const QLatin1Constant FieldExtendedAddress;
     static const QLatin1Constant SubTypeParcel;
     static const QLatin1Constant SubTypePostal;
     static const QLatin1Constant SubTypeDomestic;
@@ -77,6 +78,7 @@ public:
     Q_DECLARE_LATIN1_CONSTANT(FieldCountry, "Country");
     Q_DECLARE_LATIN1_CONSTANT(FieldSubTypes, "SubTypes");
     Q_DECLARE_LATIN1_CONSTANT(FieldPostOfficeBox, "PostOfficeBox");
+    Q_DECLARE_LATIN1_CONSTANT(FieldExtendedAddress, "ExtendedAddress");
     Q_DECLARE_LATIN1_CONSTANT(SubTypeParcel, "Parcel");
     Q_DECLARE_LATIN1_CONSTANT(SubTypePostal, "Postal");
     Q_DECLARE_LATIN1_CONSTANT(SubTypeDomestic, "Domestic");
@@ -95,6 +97,8 @@ public:
     QString country() const {return value(FieldCountry);}
     void setPostOfficeBox(const QString& postOfficeBox) {setValue(FieldPostOfficeBox, postOfficeBox);}
     QString postOfficeBox() const {return value(FieldPostOfficeBox);}
+    void setExtendedAddress(const QString& extendedAddress) {setValue(FieldExtendedAddress, extendedAddress);}
+    QString extendedAddress() const {return value(FieldExtendedAddress);}
 
     void setSubTypes(const QStringList& subTypes) {setValue(FieldSubTypes, subTypes);}
     void setSubTypes(const QString& subType) {setValue(FieldSubTypes, QStringList(subType));}
diff --git a/src/contacts/details/qcontactdetails.cpp b/src/contacts/details/qcontactdetails.cpp
index 3dc2658..560c236 100644
--- a/src/contacts/details/qcontactdetails.cpp
+++ b/src/contacts/details/qcontactdetails.cpp
@@ -612,6 +612,16 @@ Q_DEFINE_LATIN1_CONSTANT(QContactAddress::FieldCountry, "Country");
 Q_DEFINE_LATIN1_CONSTANT(QContactAddress::FieldPostOfficeBox, "PostOfficeBox");
 
 /*!
+   \variable QContactAddress::FieldExtendedAddress
+
+   The field key constant for the value containing the extended address segment.
+   The extended address segment is optional; could contain a note, floor or room
+   number - in general a data that is not needed for a postal letter to arrive.
+   \sa extendedAddress(), setExtendedAddress()
+ */
+Q_DEFINE_LATIN1_CONSTANT(QContactAddress::FieldExtendedAddress, "ExtendedAddress");
+
+/*!
    \variable QContactAddress::FieldSubTypes
 
    The field key constant for the field that stores the sub types of a QContactAddress.
@@ -668,6 +678,18 @@ Q_DEFINE_LATIN1_CONSTANT(QContactAddress::SubTypeInternational, "International")
  */
 
 /*!
+   \fn QContactAddress::extendedAddress() const
+   Returns the extended address segment of the address stored in this detail.
+   \since 1.2.2
+ */
+
+/*!
+   \fn QContactAddress::setExtendedAddress(const QString& extendedAddress)
+   Sets the extended address segment of the address stored in this detail to \a extendedAddress.
+   \since 1.2.2
+ */
+
+/*!
    \fn QContactAddress::street() const
    Returns the street segment of the address stored in this detail.
    \since 1.0
@@ -786,6 +808,12 @@ QContactFilter QContactAddress::match(const QString &subString)
     f6.setValue(subString);
     f6.setMatchFlags(QContactFilter::MatchContains);
 
+    QContactDetailFilter f7;
+    f7.setDetailDefinitionName(QContactAddress::DefinitionName,
+                               QContactAddress::FieldExtendedAddress);
+    f7.setValue(subString);
+    f7.setMatchFlags(QContactFilter::MatchContains);
+
     return (f1 | f2 | f3 | f4 | f5 | f6);
 }
 
diff --git a/src/contacts/qcontactmanagerengine.cpp b/src/contacts/qcontactmanagerengine.cpp
index c2fdef8..2aa87a7 100644
--- a/src/contacts/qcontactmanagerengine.cpp
+++ b/src/contacts/qcontactmanagerengine.cpp
@@ -1174,6 +1174,7 @@ QMap<QString, QMap<QString, QContactDetailDefinition> > QContactManagerEngine::s
     f.setDataType(QVariant::String);
     f.setAllowableValues(QVariantList());
     fields.insert(QContactAddress::FieldPostOfficeBox, f);
+    fields.insert(QContactAddress::FieldExtendedAddress, f);
     fields.insert(QContactAddress::FieldStreet, f);
     fields.insert(QContactAddress::FieldLocality, f);
     fields.insert(QContactAddress::FieldRegion, f);
diff --git a/src/versit/qversitcontactexporter_p.cpp b/src/versit/qversitcontactexporter_p.cpp
index 76dfb70..d33fcc7 100644
--- a/src/versit/qversitcontactexporter_p.cpp
+++ b/src/versit/qversitcontactexporter_p.cpp
@@ -345,7 +345,7 @@ void QVersitContactExporterPrivate::encodeAddress(
     encodeParameters(property, address.contexts(), address.subTypes());
     property.setValue(QStringList()
                       << address.postOfficeBox()
-                      << QString() // Leave out the extended address field
+                      << address.extendedAddress()
                       << address.street()
                       << address.locality()
                       << address.region()
@@ -356,6 +356,7 @@ void QVersitContactExporterPrivate::encodeAddress(
     *processedFields << QContactAddress::FieldContext
                       << QContactAddress::FieldSubTypes
                       << QContactAddress::FieldPostOfficeBox
+                      << QContactAddress::FieldExtendedAddress
                       << QContactAddress::FieldStreet
                       << QContactAddress::FieldLocality
                       << QContactAddress::FieldRegion
diff --git a/src/versit/qversitcontactimporter_p.cpp b/src/versit/qversitcontactimporter_p.cpp
index b1ddd76..88ab16d 100644
--- a/src/versit/qversitcontactimporter_p.cpp
+++ b/src/versit/qversitcontactimporter_p.cpp
@@ -339,9 +339,9 @@ bool QVersitContactImporterPrivate::createAddress(
     QString value(takeFirst(addressParts));
     if (!value.isEmpty())
         address.setPostOfficeBox(value);
-    // There is no setter for the Extended Address in QContactAddress:
-    if (!addressParts.isEmpty())
-        addressParts.removeFirst();
+    value = takeFirst(addressParts);
+    if (!value.isEmpty())
+        address.setExtendedAddress(value);
     value = takeFirst(addressParts);
     if (!value.isEmpty())
         address.setStreet(value);
diff --git a/tests/auto/qcontactdetails/tst_qcontactdetails.cpp b/tests/auto/qcontactdetails/tst_qcontactdetails.cpp
index b284263..81ca612 100644
--- a/tests/auto/qcontactdetails/tst_qcontactdetails.cpp
+++ b/tests/auto/qcontactdetails/tst_qcontactdetails.cpp
@@ -127,6 +127,9 @@ void tst_QContactDetails::address()
     QCOMPARE(a1.street(), QString("1234"));
     a1.setPostOfficeBox("PO Box 5678");
     QCOMPARE(a1.postOfficeBox(), QString("PO Box 5678"));
+    a1.setExtendedAddress("Suite 11");
+    QCOMPARE(a1.extendedAddress(), QString("Suite 11"));
+
 
 
     // Sub types
diff --git a/tests/auto/qversitcontactimporter/tst_qversitcontactimporter.cpp b/tests/auto/qversitcontactimporter/tst_qversitcontactimporter.cpp
index 1d27f0d..0e63deb 100644
--- a/tests/auto/qversitcontactimporter/tst_qversitcontactimporter.cpp
+++ b/tests/auto/qversitcontactimporter/tst_qversitcontactimporter.cpp
@@ -261,12 +261,33 @@ void tst_QVersitContactImporter::testAddress()
     QContact contact = mImporter->contacts().first();
     QContactAddress address = contact.detail<QContactAddress>();
     QCOMPARE(address.postOfficeBox(),QString());
+    QCOMPARE(address.extendedAddress(),QString());
     QCOMPARE(address.street(),QString());
     QCOMPARE(address.locality(),QString());
     QCOMPARE(address.region(),QString());
     QCOMPARE(address.postcode(),QString());
     QCOMPARE(address.country(),QString());
 
+    // Address with some of the fields present and some of those empty
+    property.setValue(QStringList()
+                      << QLatin1String("")
+                      << QLatin1String("E")
+                      << QLatin1String("My Street")
+                      << QLatin1String("")
+                      );
+    property.setValueType(QVersitProperty::CompoundType);
+    document = createDocumentWithProperty(property);
+    QVERIFY(mImporter->importDocuments(QList<QVersitDocument>() << document));
+    contact = mImporter->contacts().first();
+    address = contact.detail<QContactAddress>();
+    QCOMPARE(address.postOfficeBox(),QString());
+    QCOMPARE(address.extendedAddress(),QLatin1String("E"));
+    QCOMPARE(address.street(),QLatin1String("My Street"));
+    QCOMPARE(address.locality(),QString());
+    QCOMPARE(address.region(),QString());
+    QCOMPARE(address.postcode(),QString());
+    QCOMPARE(address.country(),QString());
+
     // Address with all the fields filled
     property.setValue(QStringList()
                       << QLatin1String("PO Box")
@@ -283,6 +304,7 @@ void tst_QVersitContactImporter::testAddress()
     contact = mImporter->contacts().first();
     address = contact.detail<QContactAddress>();
     QCOMPARE(address.postOfficeBox(),QLatin1String("PO Box"));
+    QCOMPARE(address.extendedAddress(),QLatin1String("E"));
     QCOMPARE(address.street(),QLatin1String("My Street"));
     QCOMPARE(address.locality(),QLatin1String("My Town"));
     QCOMPARE(address.region(),QLatin1String("My State"));
-- 
1.7.4.1


commit 9c54e8bf435ad90576e3fdada93d3002ab42bf84
Author: Holger Schr√∂der <holger.schroeder.ext@basyskom.de>
Date:   Thu Oct 27 16:17:06 2011 +0200

    Implement lexical sorting of urls
    
    For some reason the tracker contact backend implementation seems
    to need this.
    
    Task-number: NB#287287

diff --git a/src/contacts/qcontactmanagerengine.cpp b/src/contacts/qcontactmanagerengine.cpp
index c2fdef8..6796361 100644
--- a/src/contacts/qcontactmanagerengine.cpp
+++ b/src/contacts/qcontactmanagerengine.cpp
@@ -1840,10 +1840,6 @@ int QContactManagerEngine::compareVariant(const QVariant& first, const QVariant&
                 return (a < b) ? -1 : ((a == b) ? 0 : 1);
             }
 
-        case QVariant::Char: // Needs to do proper string comparison
-        case QVariant::String:
-            return compareStrings(first.toString(), second.toString(), sensitivity);
-
         case QVariant::Double:
             {
                 const double a = first.toDouble();
@@ -1896,8 +1892,11 @@ int QContactManagerEngine::compareVariant(const QVariant& first, const QVariant&
                 return 0; // they are equal
             }
 
+        case QVariant::Char:
+        case QVariant::String:
         default:
-            return 0;
+            // use lexical comparison as fallback...
+            return compareStrings(first.toString(), second.toString(), sensitivity);
     }
 }
 

Qt Mobility 1.0.0-beta1 is a beta release. It contains a number of changes,
including API improvements and bug fixes, since the Qt Mobility 1.0.0-tp2
release. For more details, please refer to the online documentation included
in this distribution. The documentation is also available online:

  http://qt.nokia.com/doc/qtmobility-1.0

Some of the changes listed in this file include issue tracking numbers
corresponding to tasks in the Qt Bug Tracker or the Merge Request queue
of the public source repository.

Qt Bug Tracker: http://bugreports.qt.nokia.com
Merge Request:  http://qt.gitorious.org


****************************************************************************
*                           General                                        *
****************************************************************************

New features
------

 - SomeClass, SomeOtherClass
    * New classes for foo, bar and baz

Optimizations
------

 - Optimized foo in QSomeClass
    * See list of Important Behavior Changes below


****************************************************************************
*                   Important Behavior Changes                             *
****************************************************************************

 -


****************************************************************************
*                          Library                                         *
****************************************************************************

QtBearer
------

 - Various memory leaks.
 - Documentation fixes.
 - QNetworkSession API changes.
    * Renamed isActive() to isOpen().
    * Renamed property key "ActiveConfigurationIdentifier" to
      "ActiveConfiguration".
    * Renamed property key "UserChoiceConfigurationIdentifier" to
      "UserChoiceConfiguration".
    * bearerName() function moved to QNetworkConfiguration::bearerName().
 - Symbian
    * Add Symbian build time declarations to examples and tests (capabilities,
      UIDs etc).
 - Improved unit test coverage and stability.

QtContacts
------

 - foo
    * bar

QtLocation
------

 - QGeoPositionInfoSource
    * Renamed requestTimeout to updateTimeout().
    * updateTimeout() is now emitted during periodic updates if
      the update is late or an error occurs.
 - QGeoCoordinate
    * Renamed QGeoCoordinate:DecimalDegrees to QGeoCoordinate::Degrees.
 - QGeoPositionInfo
    * Renamed property() to attribute().
    * Renamed setProperty() to setAttribute().
    * Renamed hasProperty() to hasAttribute().
    * Renamed removeProperty() to removeAttribute().
    * Renamed QGeoPositionInfo::Heading to QGeoPositionInfo::Direction.
 - QGeoSatelliteInfo
    * Renamed property() to attribute().
    * Renamed setProperty() to setAttribute().
    * Renamed hasProperty() to hasAttribute().
    * Renamed removeProperty() to removeAttribute().
 - QNmeaPositionInfoSource
    * Added protected virtual function parsePosInfoFromNmeaData() to 
      enable clients to handle non-standard NMEA sentences if they need to.

QtMessaging
------

 - Wrap QMessageStore with QMessageManager.
    * In order to provide a consistent interface with other components
      of QtMobility that provide a central data manager interface, the
      existing QMessageStore interface is now private, and replaced in
      the public interface by the QMessageManager class.
    
      The new class provides exactly the same interface as the old class
      except that it is instantiated as a handle rather than accessed as
      a singleton.  Internally the handle object can be instantiated as
      needed, but in documentation or examples the class should be treated
      as if it were potentially expensive to create and destroy; this will
      give a consistent form of use for all Q{x}Manager classes between
      the various QtMobility projects.
    
      The old QMessageStore class is still used internally by the
      QMessageManager, so the latter class need not be reimplemented for
      multiple platforms.

 - Rename Q{X}Ordering to Q{X}SortOrder.
    * For increased consistency between QtMobility APIs.

 - Support ordering via a list of SortOrder objects.
    * For consistency with other QtMobility APIs, allow a composite ordering
      to be specified using a list of Q{X}SortOrder objects rather than
      requiring the objects to be accumulated via the + operator.

 - Rename QMessageDataComparator::Options to MatchFlags.

 - Rename QMessageServiceAction to QMessageService.
    * The term 'action' is already used with conflicting meanings;
      it can represnt a user-input (QAction), or a facility provided
      by a service provider which is exposed to the user (as in
      QContactAction).
    
      QMessageService provides a proxy, dispatcher or broker
      facility, but adding any of these terms to the class name has
      been judged as not constituting an improvement to readability.

 - Return int from size() functions.
    * Consistent with standard Qt practice.

 - Rename write{Text}ContentTo to write{Text}Content.
    * For improved consistentcy with Qt naming.

 - Rename QMessageManager::ErrorCode to QMessageManager::Error.
    * For improved consistency with Qt naming.

 - Reorder the parameters for QMessageAddress(Type, Address).
    * There is a logical dependency of address on type.

 - API improvements to QMessageService.
    * Use the same State enum values as used by the QtMobility Contacts
      API, and provide the same stateChanged() signal signature.
    
      Rename cancelOperation() to cancel() for consistency with Qt.

 - Rename QMessageStore:: and QMessageManager::lastError() to error().
    * This is the more common form in Qt, and in line with the equivalent
      Contacts interface name.

 - Rename QMessageFolder::displayName() to name().
    * DisplayName should be used where the name used for display purposes
      differs from the fundamental name property.

QtMedia
------

 - Added Audio and Video QML elements.
 - Renamed QtMedia::Frequency to QtMedia::SampleRate for consistency and
   clarity.
 - Renamed QtMedia::CoverArtUriSmall to QtMedia::CoverArtUrlSmall,
   QtMedia::CoverArtUriLarge to CoverArtUrlLarge, and  QtMedia::PosterUri
   to QtMedia::PosterUrl.
 - QGraphicsVideoItem
    * Added offset(), size(), nativeSize(), and aspectRatioMode()
      properties.
 - QGraphicsVideoItem, QMediaPlaylist, QVideoWidget
    * Replaced QMediaObject* constructor parameter with setMediaObject()
      function.
 - QMediaContent
    * Renamed canonicalUri() to canonicalUrl().
    * Removed coverArtUriSmall(), coverArtUriLarge(), posterUri(),
      thumbnailUriSmall(), and thumbnailUriLarge() properties.
 - QMediaPlayer
    * Added static supportedMimeTypes() method.
    * Added isAudioAvailable() property.
 - Added QMediaTimeRange and QMediaTimeInterval classes to represent time
   periods in media items.
 - QMediaPlayerControl
    * Renamed seekRanges() to availablePlaybackRanges(). This method now
      returns a QMediaTimeRange, which can contain multiple disjoint time
      intervals representing buffered portions of media.
 - QMediaResource
    * Renamed uri() to url().
    * Renamed channels() to channelCount().
    * Renamed size() to dataSize().
    * Removed duration() and sampleSize().

QtPublishSubscribe
------

 - Rename QValueSpacePublisher::attributeInterestChanged() to
   QValueSpacePublisher::interestChanged().
 - Symbian backend improvements
    * MOBILITY-387: Symbian central repository related compile error fixed
    * Support for removeValue.
    * subPaths only returns the values that are really available.
    * Unsupported data types are published as serialized QByteArrays.
      All QVariant data types can be passed through the Publish and Subscribe.
    * PSPathMapper server added so the QCRML files no longer need to be parsed
      in client-side.
    * QCRML files can now be installed on any drive.
 - Fixed bugs
    * QTMOBILITY-38: The table/list view in the subscriber window of publish
      and subscribe example is now readonly.
    * QTMOBILITY-39: Compile failure with gcc 4.4.
    * QTMOBILITY-43: Rework P&S example to support small screen sizes.
    * Memory leak in Registry Layer.

QtServiceFramework
------

 - foo
    * bar

QtSystemInfo
------

 - New features for Maemo5 backend
    * simStatus
    * Available languages
    * hasFeatureSupported completed
    * displayBrightness
    * imsi

 - New features for Mac backend
    * added network signaling

 - New features for Linux backend
    * code refactoring


Qt Mobility Plugins
------

 - foo
    * bar


****************************************************************************
*                      Platform Specific Changes                           *
****************************************************************************

Qt Mobility for Embedded Linux
------

 -

Qt Mobility for Unix (X11 and Mac OS X)
------

 - 

Qt Mobility for Linux/X11
------

 -

Qt Mobility for Windows
------
 - Added Direct Show based media player service implementation.

Qt Mobility for Mac OS X
------

 -



Qt Mobility for Windows CE
------

 -

Qt Mobility for Maemo5
------

 - Experimental support for QtLocation
 - Experimental support for QtSystemInfo

****************************************************************************
*                          Tools                                           *
****************************************************************************

 - tool
    * foo


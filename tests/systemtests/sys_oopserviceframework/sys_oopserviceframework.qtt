/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser General Public
** License version 2.1 as published by the Free Software Foundation and
** appearing in the file LICENSE.LGPL included in the packaging of this
** file. Please review the following information to ensure the GNU Lesser
** General Public License version 2.1 requirements will be met:
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights. These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU General
** Public License version 3.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of this
** file. Please review the following information to ensure the GNU General
** Public License version 3.0 requirements will be met:
** http://www.gnu.org/copyleft/gpl.html.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms and
** conditions contained in a signed written agreement between you and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/serviceframework

testcase = {

    Start_out_of_process_Service : function()
    {

        prompt(twiki('*Start out of process Service*

    1. Start sfwecho_service application (as background process)
    1. Verify that the application(service) is running in background as Daemon
        '));
    },

    Broadcasting_messages_send_correctly : function()
    {
        prompt(twiki('*Broadcasting messages send correctly*

    1. The purpose of this test is to send a Broadcasting message to sfw server which will bounce it back
    1. Start sfwecho_client application (it will ensure the service is running automatically)
    1. Choose *Shared Chat* radio button
    1. Input some random text in the Message input box
    1. Click on Send button
    1. Verify that the message is echoed to the message box in the middle of current window
        '));
    },


    Private_messages_send_correctly : function()
    {
        prompt(twiki('*Private messages send correctly*

    1. The purpose of this test is to send a private message to sfw server which will bounce it back
    1. Start sfwecho_client application (it will ensure the service is running automatically)
    1. Choose *Unique Chat* radio button
    1. Input some random text in the Message input box
    1. Click on Send button
    1. Verify that the message is echoed to the message box in the middle of current window
        '));
    },


    Find_available_services : function()
    {
        prompt(twiki('*Find available services*

    1. The purpose of this test is to list all available services
    1. Start the sfwecho_client application (it will ensure the sfw server is running automatically)
    1. Start the servicebrowser application
    1. Verify that a list of available services is displayed
    1. Verify that one of the available services is "EchoService"
        '));
    },
    
    
    Find_service_interfaces : function()
    {
        prompt(twiki('*Find service interfaces*

    1. The purpose of this test is to list all available interfaces for a service
    1. Start the sfwecho_client application (it will ensure the sfw server is running automatically)
    1. Start the servicebrowser application
    1. Select "EchoService" from the list of services (on Symbian select "EchoService" from the list and then "Interfaces" from the pulldown menu)
    1. Verify the interfaces implemented by Echo Service are displayed
    1. Repeat this with another service
    1. Verify the interfaces for this other service are also displayed
        '));
    },


    Look_up_interface_attributes : function()
    {
        prompt(twiki('*Look up interface attributes*

    1. The purpose of this test is to list all available attributes for a service interface
    1. Start the sfwecho_client application (it will ensure the sfw server is running automatically)
    1. Start the servicebrowser application
    1. Select "EchoService" from the list of services (on Symbian select "EchoService" from the list and then "Interfaces" from the pulldown menu)
    1. From the list of interfaces select one (on Symbian select an interface then select "Attributes" from the pulldown menu)
    1. Verify the attributes for this interface are shown
    1. Repeat this test choosing a different service
    1. Verify the attributes for this new service are also shown
        '));
    }
}

/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser General Public
** License version 2.1 as published by the Free Software Foundation and
** appearing in the file LICENSE.LGPL included in the packaging of this
** file. Please review the following information to ensure the GNU Lesser
** General Public License version 2.1 requirements will be met:
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights. These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU General
** Public License version 3.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of this
** file. Please review the following information to ensure the GNU General
** Public License version 3.0 requirements will be met:
** http://www.gnu.org/copyleft/gpl.html.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms and
** conditions contained in a signed written agreement between you and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/contacts

// make it simple to change the name of test application later on
function startTestApp()
{
    startApplication('qmlcontacts');
}

// create a re-usable contact set
function exampleContactSet()
{
    return [
          {name:'Mr. Andy Clark',
          firstName:'Andy',
          title:'Engineer',
          organization:'Example',
          department:'',
          phone:'07-2342322',
          email:'andy@example.com',
          address:'',
          birthday:'1/01/4500',
          avatar:'http://qt.nokia.com/logo.png'},
          {name:'Mr. Bob Green',
          firstName:'Bob',
          title:'Engineer',
          organization:'Example',
          phone:'07-3242325',
          email:'bob@example.com',
          address:'',
          birthday:'1/01/4500',
          },
          {
          name:'Mr. Charles Brows',
          firstName:'Charles',
          title:'Engineer',
          organization:'Example',
          department:'',
          phone:'32324534233',
          email:'charles@example.com',
          address:'',
          birthday:'1/01/4500'
          },
          {
          name:'Mr. David Edie',
          firstName:'David',
          title:'Manager',
          organization:'Example',
          department:'',
          phone:'(07) 3245-2323',
          email:'david@example.com',
          address:'',
          birthday:'1/01/4500'
          },
          {
          name:'Mrs. Carol Eden',
          firstName:'Carol',
          title:'Manager',
          organization:'Example',
          department:'',
          phone:'2323242',
          email:'carol@example.com',
          address:'',
          birthday:'1/01/4500'
          },
          {
          name:'Mr. Bill Chilton',
          firstName:'Bill',
          title:'Manager',
          organization:'Example',
          department:'',
          phone:'564412232',
          email:'bill@example.com',
          address:'',
          birthday:'1/01/4500'
          },
          {
          name:'Ms. Aaron Gates',
          firstName:'Aaron',
          title:'Engineer',
          organization:'Example',
          department:'',
          phone:'33333',
          email:'aaron@example.com',
          address:'',
          birthday:'1/01/4500'
          },
          {
          name:'Mr. Jason Black',
          firstName:'Jason',
          title:'Engineer',
          organization:'Example',
          department:'',
          phone:'33333333333',
          email:'jason@example.com',
          address:'',
          birthday:'1/01/4500'
          },
          {
          name:'Mr. Alexander Mcdonald',
          firstName:'Alexander',
          title:'Engineer',
          organization:'Example',
          department:'',
          phone:'111111111',
          email:'alex@example.com',
          address:'',
          birthday:'1/01/4500'
          }
      ]
}

// given a contact object check its details
function checkContact(contact)
{
    select(contact.firstName);
    select('More..');
    compare('Contact', getText('Type'));
    compare(contact.name, getText('DisplayLabel'));
    compare(contact.email, getText('EmailAddress'));
    compare(contact.name, getText('Name'));
    compare(contact.department, getText('Department'));
    compare(contact.phone, getText('PhoneNumber'));
    compare(contact.avatar, getText('Avatar'));
    select('Back');
}

testcase = {

    // prove that the test application starts before anything else is tested.
    run_test_application: function()
    {
        // Test meta data
        testTitle = "Contacts - Run test application";
        testBinary = "Qmlcontact";
        testSource = "$MOBILITYDIR/demos/qmlcontacts";
        testGoal = "Verify test application can run without any error";
        testPreconditions = "None";
        testGroups = "BAT_MOBILITY";
        testRequirements = "";

        // Test Steps       
        startTestApp();
        if (!runAsManualTest()){
            // ensure we have a widget to work with, dump its details
            print('Focus widget is' + focusWidget());
        }else{
            prompt('Verify test application started and closed without issue');
        }
    },


    check_contact_list_data : {
        ContactSet : [ exampleContactSet() ]
    },

    // verify that overview of contact names is correct
    check_contact_list: function(contactSet)
    {
        // Test meta data
        testTitle = "Contacts - Run test application";
        testBinary = "Qmlcontact";
        testSource = "$MOBILITYDIR/demos/qmlcontacts";
        testGoal = "Verify contact list can be checked";
        testPreconditions = "None";
        testGroups = "BAT_MOBILITY";
        testRequirements = "";

        // Test Steps
        startTestApp();
        for (var index=0; index < contactSet.length; index++){
            // note the contact list should be the focus widget
            select(contactSet[index].firstName);
        }
    },


    expand_a_contact_data : {
        ContactSet : [ exampleContactSet() ]
    },

    // verify that when selecting a contact its summary is shown
    expand_a_contact: function(contactSet)
    {
        // Test meta data
        testTitle = "Contacts - Run test application";
        testBinary = "Qmlcontact";
        testSource = "$MOBILITYDIR/demos/qmlcontacts";
        testGoal = "Verify contact can be export";
        testPreconditions = "None";
        testGroups = "BAT_MOBILITY";
        testRequirements = "";

        // Test Steps 
        startTestApp();
        for (var index = 0; index < 3; index++){
            prompt("Verify that no details for " + contactSet[index].firstName  +' is seen');
            select(contactSet[index].firstName);
            verify(getValue().contains(contactSet[index].name), 'Verify contact summary for ' + contactSet[index].name);
            verify(getLabels().contains('More...'), 'Verify \'More..\' button is present');
        }
    },

    show_all_contact_detail_data : {
        ContactSet : [ exampleContactSet() ]
    },

    // verify that the details page for contacts can be seen
    show_all_contact_detail : function(contactSet)
    {
        // Test meta data
        testTitle = "Contacts - Run test application";
        testBinary = "Qmlcontact";
        testSource = "$MOBILITYDIR/demos/qmlcontacts";
        testGoal = "Verify all contact detail can be shown";
        testPreconditions = "None";
        testGroups = "BAT_MOBILITY";
        testRequirements = "";

        // Test Steps 
        startTestApp();
        for (var index = 0; index < 3; index++){
            select(contactSet[index].firstName);
            select('More..')
            verify(getLabels().contains('DisplayLabel'), 'Verify contact details are shown for ' + contactSet[index].name);
            select('Back');
        }
    },
    
    check_contact_details_data :{
        ContactSet : [ exampleContactSet() ]
    },

    // check that each contact has the details expec
    check_contact_details: function(contactSet)
    {
        // Test meta data
        testTitle = "Contacts - Run test application";
        testBinary = "Qmlcontact";
        testSource = "$MOBILITYDIR/demos/qmlcontacts";
        testGoal = "Verify contact details can be checked";
        testPreconditions = "None";
        testGroups = "BAT_MOBILITY";
        testRequirements = "";

        // Test Steps 
        startTestApp();
        for (var index=0; index < contactSet.length; index++){
            checkContact(contactSet[index]);
        }
    }

}  // end of testcase


/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/serviceframework

testcase = {

    Add_Note_With_Date: function()
    {
        // Test meta data
        testApplication = "SFW - Add Note With Date";
        testBinary = "declarative-sfw-notes";
        testGoal = "Verify that ";
        testPreconditions = "notes manager service must be registered: eg run *servicefw add xmldata/notesmanagerservice.xml*";
        testGroups = "BAT";

        // Test steps
        prompt(twiki("---+++ " + testApplication + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>

            | *Step* | *Verification* |
            | Launch " + testBinary + " | App launches normally |
            | Click '+' button | |
            | Enter a note in the form *Note1#2010-10-01#10:30* | |
            | Click *Ok* button | Verify that note entered is listed with date mentioned |
        "));
    },

    Add_Note_Without_Date: function()
    {
        // Test meta data
        testApplication = "SFW - Add Note Without Date";
        testBinary = "declarative-sfw-notes";
        testGoal = "Verify that a note entered without a date gets the current date appended to it";
        testPreconditions = "notes manager service must be registered: eg run *servicefw add xmldata/notesmanagerservice.xml*";
        testGroups = "BAT";

        // Test steps
        prompt(twiki("---+++ " + testApplication + "<br><br>
           *Goal:* " + testGoal + "<br>
           *Pre-Requisites:* " + testPreconditions + "<br>
           *Tested Binary:* " + testBinary + "<br>

           | *Step* | *Verification* |
           | Launch " + testBinary + " | App launches normally |
           | Click '+' button | |
           | Enter a note in the form *My Note* | |
           | Click *Ok* button | Verify that note entered has the current date |
       "));
    },

    Browse_Notes: function()
    {
          // Test meta data
          testApplication = "SFW - Browse Notes";
          testBinary = "declarative-sfw-notes";
          testGoal = "Verify that the user can browse through all notes in the system.";
          testPreconditions = "notes manager service must be registered: eg run *servicefw add xmldata/notesmanagerservice.xml*";
          testGroups = "BAT";

          // Test steps
          prompt(twiki("---+++ " + testApplication + "<br><br>
              *Goal:* " + testGoal + "<br>
              *Pre-Requisites:* " + testPreconditions + "<br>
              *Tested Binary:* " + testBinary + "<br>

              | *Step* | *Verification* |
              | Launch " + testBinary + " | App launches normally |
              | Ensure at least three notes exist in the system | Verify that *right* arrow button on dialog can be used to navigate to last note |
              | | Verify that the *left* arrow button on dialog can be used to navigate to first note |
        "));
    },

    Find_Note: function()
    {
       // Test meta data
       testApplication = "SFW - Find Note";
       testBinary = "declarative-sfw-notes";
       testGoal = "Verify that notes can be found using the search function.";
       testPreconditions = "1. notes manager service must be registered: eg run *servicefw add xmldata/notesmanagerservice.xml*<br>
   1. at least three notes have been entered in the system.";
       testGroups = "BAT";

       // Test steps
       prompt(twiki("---+++ " + testApplication + "<br><br>
           *Goal:* " + testGoal + "<br>
           *Pre-Requisites:* " + testPreconditions + "<br>
           *Tested Binary:* " + testBinary + "<br>

           | *Step* | *Verification* |
           | Launch " + testBinary + " | App launches normally |
           | Click *Search* button ( looking glass ) | |
           | Enter text from previously entered note, eg *My Note* | |
           | Click *OK* button | Verify that expected note is displayed |
        "));
   },

    Delete_Note: function()
    {
         // Test meta data
         testApplication = "SFW - Delete Note";
         testBinary = "declarative-sfw-notes";
         testGoal = "Verify that notes can be deleted.";
         testPreconditions = "1. notes manager service must be registered: eg run *servicefw add xmldata/notesmanagerservice.xml*<br>
   1. at least three notes have been entered in the system.";
         testGroups = "BAT";

         // Test steps
         prompt(twiki("---+++ " + testApplication + "<br><br>
             *Goal:* " + testGoal + "<br>
             *Pre-Requisites:* " + testPreconditions + "<br>
             *Tested Binary:* " + testBinary + "<br>

             | *Step* | *Verification* |
             | Launch " + testBinary + " | App launches normally |
             | Click the *Delete* button ( in between Add and Search buttons ) | Verify that the current note was deleted, ie use left and right arrow buttons to browse notes. |
        "));
    },

}


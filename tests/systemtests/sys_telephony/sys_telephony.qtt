/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser General Public
** License version 2.1 as published by the Free Software Foundation and
** appearing in the file LICENSE.LGPL included in the packaging of this
** file. Please review the following information to ensure the GNU Lesser
** General Public License version 2.1 requirements will be met:
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights. These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU General
** Public License version 3.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of this
** file. Please review the following information to ensure the GNU General
** Public License version 3.0 requirements will be met:
** http://www.gnu.org/copyleft/gpl.html.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms and
** conditions contained in a signed written agreement between you and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/telephony

testcase = {
    // Under construction
    initTestCase: {
        // if qtmobility.version < 1.1
            // skip("Telephony exists only for Qt Mobility 1.1 and greater"
    },

    current_state_data: {
        nocall:["Do nothing", "there is no call shown"],
        ringing:["Call another device but do not answer", "callmonitor displays 'ringing'"],
        inprogress:["Call another device and answer", "callmonitor displays 'call in progress'"],
        inprogress:["Call another device, answer and place on hold", "callmonitor displays 'call on hold'"]
    },

    current_state: function(action, result) {
        var prompttext = "Start callmonitor\n" + action + "\n" + "Verify that " +result;
        prompt(twiki(prompttext));
    },

    notified_of_status_change: function() {
        prompt("Start callmonitor
Call the device from a secondary device
Verify that the callmonitor shows incoming call
Answer the call
Verify that the callmonitor changes the status to connected
Set the call to held
Verify that the callmonitor changes the status to on hold
Terminate the call on the secondary device
Verify that the callmonitor changes the status to terminated");
    },

    current_call_information: function() {
        prompt("Start callmonitor
Call the device from a secondary device
Verify that the callmonitor shows incoming call
Answer the call
Verify that the callmonitor changes the status to connected
Verify that the call type shows as 'Voice' and the source phone number matches that of the calling device");
    },

    notified_of_list_change: function() {
        prompt("Verify the callmonitor gets a notification on a change of list of calls.");
    },

    query_the_open_calls: function() {
        prompt("Verify the callmonitor can query open calls at any given time.");
    }

}

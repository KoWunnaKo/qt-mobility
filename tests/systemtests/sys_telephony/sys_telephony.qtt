/****************************************************************************
**
** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Digia gives you certain additional
** rights.  These rights are described in the Digia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/telephony
//There is no TESTED_COMPONENT or test application callmonitor, comment all the test function

testcase = {
    // Under construction
    initTestCase: {
        // if qtmobility.version < 1.1
            // skip("Telephony exists only for Qt Mobility 1.1 and greater"
    },

    current_state_data: {
        nocall:["Do nothing", "there is no call shown"],
        ringing:["Call another device but do not answer", "callmonitor displays 'ringing'"],
        inprogress:["Call another device and answer", "callmonitor displays 'call in progress'"],
        inprogress:["Call another device, answer and place on hold", "callmonitor displays 'call on hold'"]
    },
    current_state: function(action, result) 
    {
        /* comment as there is no tested component
        // Test meta data
        testTitle = "Telephony - current state";
        testBinary = "";
        testGoal = "";
        testPreconditions = "None";
        testGroups = " ";
        testRequirements = "";

        // Test steps
        skip('Not implimented yet', SkipAll);
        //var prompttext = "Start callmonitor\n" + action + "\n" + "Verify that " +result;
        //prompt(twiki(prompttext));
        */
    },

    notified_of_status_change: function() 
    {
        /* comment as there is no tested component
        prompt("Start callmonitor
        Call the device from a secondary device
        Verify that the callmonitor shows incoming call
        Answer the call
        Verify that the callmonitor changes the status to connected
        Set the call to held
        Verify that the callmonitor changes the status to on hold
        Terminate the call on the secondary device
        Verify that the callmonitor changes the status to terminated");
        */
    },

    current_call_information: function() 
    {
        /* comment as there is no tested component
        prompt("Start callmonitor
        Call the device from a secondary device
        Verify that the callmonitor shows incoming call
        Answer the call
        Verify that the callmonitor changes the status to connected
        Verify that the call type shows as 'Voice' and the source phone number matches that of the calling device");
        */
    },

    notified_of_list_change: function() 
    {
        /* comment as there is no tested component
        prompt("Verify the callmonitor gets a notification on a change of list of calls.");
        */
    },

    query_the_open_calls: function() 
    {
        /* comment as there is no tested component
        prompt("Verify the callmonitor can query open calls at any given time.");
        */
    }
}

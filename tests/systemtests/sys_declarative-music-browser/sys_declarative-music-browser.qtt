/****************************************************************************
**
** Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser General Public
** License version 2.1 as published by the Free Software Foundation and
** appearing in the file LICENSE.LGPL included in the packaging of this
** file. Please review the following information to ensure the GNU Lesser
** General Public License version 2.1 requirements will be met:
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights. These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU General
** Public License version 3.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of this
** file. Please review the following information to ensure the GNU General
** Public License version 3.0 requirements will be met:
** http://www.gnu.org/copyleft/gpl.html.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms and
** conditions contained in a signed written agreement between you and Nokia.
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/gallery

testcase = {

    list_albums: function()
    {
        // Test meta data
        testTitle = "Music - List Albums";
        testBinary = "declarative-music-browser";
        testSource = "$MOBILITYDIR/examples/declarative-music-browser"
        testGoal = "Verify that all available music albums can be shown and selected";
        testPreconditions = "None";
        testGroups = "BAT_MOBILITY";
        testRequirements = "";

        // Test steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>
            *Requirements:* " + testRequirements + "<br>

            | *Step* | *Verification* |
            | Launch " + testBinary + " | Verify app launches normally |
            | Click Albums icon | Verify that the albums listed match what is seen via the native music/document browser |
            | | Verify that albums have the expected cover thumbnail above the album title |
            | Click on an album in view that is known to have more that once song in it | Verify that the expected songs are listed in view |
            | Flick the screen to the left (in application) | Verify that the next album is displayed |
            | Click the Menu label to return to the application home screen | |
        "));
    },


    list_artists : function()
    {
        testTitle = "Music - List Artists";
        testBinary = "declarative-music-browser";
        testSource = "$MOBILITYDIR/examples/declarative-music-browser"
        testGoal = "Verify that all available artists can be shown and selected";
        testPreconditions = "None";
        testGroups = " ";
        testRequirements = "";

        // Test steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>
            *Requirements:* " + testRequirements + "<br>

            | *Step* | *Verification* |
            | Launch " + testBinary + " | App launches normally |
            | Click Artists icon | Verify that the artists listed match what is seen via the native music/document browser |
            | Click on an artist in view | Verify that the artist name is listed correctly at top of view |
            | | Verify that expected songs are listed in view |
            | Flick the screen to the left (in application) | Verify that the next album from artist or next artist is displayed |
            | Click the Menu label to return to the application home screen | |
        "));
    },


    list_genres : function()
    {
        testTitle = "Music - List Genres";
        testBinary = "declarative-music-browser";
        testSource = "$MOBILITYDIR/examples/declarative-music-browser"
        testGoal = "Verify that available genres are shown correctly";
        testPreconditions = "None";
        testGroups = " ";
        testRequirements = "";

        // Test steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>
            *Requirements:* " + testRequirements + "<br>

            | *Step* | *Verification* |
            | Launch " + testBinary + " | App launches normally |
            | Click Genres icon | Verify that the genres listed match what is seen via the native music/document browser |
            | Click on a Genres in view | Verify that the Genres name is listed correctly at top of view |
            | | Verify that expected songs are listed in view |
            | Flick the screen to the left (in application) | Verify that the next Genres is displayed and that all albums in that Genre are listed |
            | Click the Menu label to return to the application home screen | |
        "));
    },


    list_songs : function()
    {
        testTitle = "Music - List Songs";
        testBinary = "declarative-music-browser";
        testSource = "$MOBILITYDIR/examples/declarative-music-browser"
        testGoal = "Verify that available songs are listed correctly";
        testPreconditions = "None";
        testGroups = " ";
        testRequirements = "";

        // Test steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>
            *Requirements:* " + testRequirements + "<br>
            
            | *Step* | *Verification* |
            | Launch " + testBinary + " | App launches normally |
            | Click Songs icon | Verify that the song listed match what is seen via the native music/document browser |
            | | Verify that two of the listed songs have the correct song length mentioned on right |
            | Click on a song title | Verify that this brings up details of the song, inlcuding Cover art, Song name, Artist name, Genre and Duration |
            | Click the Menu label to return to the application home screen | |
        "));
    }

}

/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser General Public
** License version 2.1 as published by the Free Software Foundation and
** appearing in the file LICENSE.LGPL included in the packaging of this
** file. Please review the following information to ensure the GNU Lesser
** General Public License version 2.1 requirements will be met:
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights. These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU General
** Public License version 3.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of this
** file. Please review the following information to ensure the GNU General
** Public License version 3.0 requirements will be met:
** http://www.gnu.org/copyleft/gpl.html.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms and
** conditions contained in a signed written agreement between you and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/versitorganizer

function startTestApp()
{
    prompt('Start application \'calendardemo\'
    Verify test application started and closed without issue');
}


// Note for test cases relating to  functionality such as add event see test relating to src/organizer
testcase = {
    /* commented as it doesn't use at the moment.
        // prove that the test application starts before anything else is tested.
        runTestApplication: function()
        {
            startTestApp();
            if (!runAsManualTest()){
                // ensure we have a widget to work with, dump its details
                // TODO when run this test case 'automaticly' then enable this following code
                //print('Focus widget is' + focusWidget());
            }
        },
    */

    import_ical : function()
    {
        // Test meta data
        testTitle = "versitorganizer - Import ical";
        testBinary = "calendardemo";
        testSource = "$MOBILITYDIR/examples/calendardemo";
        testGoal = "Verify that ical file can be imported";
        testPreconditions = "There is an exampleEvents.ics onto a location on the target";
        testGroups = "BAT_MOBILITY";
        testRequirements = " "


        // Test Steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>
            *Requirements:* " + testRequirements + "<br>

            | *Step* | *Verification* |
            | Launch " + testBinary + " | Test application started successfully |
            | On app menu, select *Delete all items* | Verify there is no item in calendar | 
            | On app menu, select *Import items* menu entry | |
            | In file dialog that presents select the exampleEvents.ics that was transfer to the target | |
            | Click *Open* and import exampleEvents.ics | Verify there is now the following event:<br>*Subject*:Bastille Day Party<br>*Start time*:July 14, 1997 17:00 (UTC)<br>*End time*:July 15, 1997 03:59:59 (UTC) |
            |  | Verify there is the following Todo:<br>*Subject*:Submit Income Taxes<br>*Time*:April 15, 1998 |
            | If the platform(backend) supports journal entries: | Verify there is the following entries<br>*Subject*:Project xyz Review Meeting Minutes<br>*Time*:March 24, 1997 |
            | On app menu, select *Delete all items* | All items are deleted |
            | Close " + testBinary + " | Test application closed successfully |
        "));
    },

    export_ical : function()
    {
        // Test meta data
        testTitle = "Versitorganizer - Export ical";
        testBinary = "calendardemo";
        testSource = "$MOBILITYDIR/examples/calendardemo";
        testGoal = "Verify ical file can be exported";
        testPreconditions = "None";
        testGroups = "BAT_MOBILITY";
        testRequirements = " "


        // Test Steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>
            *Requirements:* " + testRequirements + "<br>

            | *Step* | *Verification* |
            | Launch " + testBinary + " | Test application started successfully |
            | On app menu, select *Delete all items* | Verify there is no item in calendar | 
            | | Verify that the current backend is the best to suit device |
            | Select *Add Event* menu entry (maybe list under *Options* menu) | |
            | Enter Subject: 'Event 1' | |
            | Enter Start time: today's date, 08:00 AM | |
            | Enter End time: today's date, 01:00 PM | |
            | Select Alarm: '30 minutes before' | |
            | Select Repeat: 'None' | |
            | Click *Save* button | |
            | Select *Add Event* menu entry | |
            | Enter Subject: 'Event 2' | |
            | Enter Start time: today's date, 08:00 AM | |
            | Enter End time: today's date, 01:00 PM | |
            | Select Alarm: '30 minutes before' | |
            | Select Repeat: 'None' | |
            | Click *Save* button | Verify that 'Event 1' and 'Event 2' are listed |
            | Select *Add Todo* menu entry (maybe listed under *Options* menu) | |
            | Enter Subject: 'Todo 1' | |
            | Enter Start time: today's date 08:00 AM  and End time: today's date 04:00 PM | |
            | Select Priority: 'High', Status: default and Alarm option : '30 minutes before' | |
            | Click *Save* button | |
            | Select *Add Todo* menu entry (maybe listed under *Options* menu) | |
            | Enter Subject: 'Todo 2' | |
            | Enter Start time: tomorrow's date 03:00 PM and End time: tomorrow's date 04:00 PM | |
            | Select Priority: 'Low', Status: 'default' and Alarm option: '15 minutes before' | |
            | Click *Save* button | Verify that 'Todo 1' and 'Todo 2' are listed |
            | If platform(backend) supports Journal entries then add a Journal entry: | |
            | Select *Add Journal* menu entry (maybe listed under *Options* menu) | |
            | Enter Subject: 'Journal 1' | |
            | Enter Start time: today\'s date 08:00 AM | |
            | Alarm : '30 minutes before' | |
            | Click *Save* button | |
            | Select *Add Journal* menu entry (maybe listed under *Options* menu) | |
            | Enter Subject: 'Journal 2' | |
            | Enter Start time: today's date 02:00 PM | |
            | Alarm : '15 minutes before' | |
            | Click *Save* button | Verify that 'Journal 1' and 'Journal 2' are listed |
            | On app menu, select *Export items* menu entry | |
            | Select suitable location saving as testcalendar.ics | |
            | Click *Save* | Ideally the testcalendar.ics be opened on a separate system and its contents validated |
            | On app menu, select *Delete all items* | Verify there is no item in calendar | 
            | Close " + testBinary + " | Test application closed successfully |
            | Launch " + testBinary + " | Test application started successfully |
            | Select location for testcalendar.ics entered earlier | | 
            | Click *Select* button | Verify that calendar items 'Event 1', 'Event 2', 'Todo 1' and 'Todo 2' are present and have expected details |
            | If platform(backend) supports Journal entries then Verify that calendar items | Verify that calendar items 'Journal 1' and 'Journal 2' are present and have expected details | 
            | Delete events 'Event 1', 'Event 2', 'Todo 1', 'Todo 2', 'Journal 1' and 'Journal 2'(using native calendar application if neccessary) | | 
            | Close " + testBinary + " | Test application closed successfully |
        "));
    },

    import_ical_data_format: function()
    {
        // Test meta data
        testTitle = "Versitorganizer - Export ical";
        testBinary = "testQtOrganizer";
        testSource = "$MOBILITYDIR/tests/applications/organizer";
        testGoal = "Verify ical data can be imported";
        testPreconditions = "None";
        testGroups = "BAT_MOBILITY";
        testRequirements = " "


        // Test Steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>
            *Requirements:* " + testRequirements + "<br>

            | *Step* | *Verification* |
            | Launch " + testBinary + " | Test application started successfully |
            | Select *Import and export organizer data* button | |
            | Click *Create template* button and press *Import item* | Verify that the type, name, start time and end time in the screen right are the same as the ical data template |
        "));
    },

    import_vcal_data_format: function()
    {
        // Test meta data
        testTitle = "Versitorganizer - Export ical";
        testBinary = "testQtOrganizer";
        testSource = "$MOBILITYDIR/tests/applications/organizer";
        testGoal = "Verify vcal data can be imported";
        testPreconditions = "None";
        testGroups = "BAT_MOBILITY";
        testRequirements = " "


        // Test Steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>
            *Requirements:* " + testRequirements + "<br>

            | *Step* | *Verification* |
            | Launch " + testBinary + " | Test application started successfully |
            | Select *Import and export organizer data* button | |
            | Click *Create template* button | |
            | Modify the calendar data as vcal format | |
            | Press *Import item* | Verify that the type, name, start time and end time in the screen right are the same as the vcal data |
        "));
    },
}

/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/serviceframework

testcase = {

    Dial_Landline_Number: function()
    {
        // Test meta data
        testTitle = "SFW - Dial Landline Number";
        testBinary = "qmldialer";
        testGoal = "Verify that ";
        testPreconditions = "Nil.";
        testGroups = "BAT";

        // Test steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
            *Goal:* " + testGoal + "<br>
            *Pre-Requisites:* " + testPreconditions + "<br>
            *Tested Binary:* " + testBinary + "<br>

            | *Step* | *Verification* |
            | Launch " + testBinary + " | App launches normally |
            | select the LandLineDialer in the Select dial service list box | verify that a status message is seen *LandlineDialer... (1.0)* |
            | use number pad on dialog to enter number , eg 0123 | |
            | press the *call* button on dialog | Verify that the new messages seen reflect the dialing states:<br><br>*Dialing 0123*<br>*Ringing*<br>*Connected* |
            | click the hangup button | verify that the new message seen reflects the dialing state:<br><br>*Hangup* |

        "));
    },

    Dial_First_Voip_Number: function()
    {
        // Test meta data
        testTitle = "SFW - Add Note Without Date";
        testBinary = "qmldialer";
        testGoal = "Verify that a note entered without a date gets the current date appended to it";
        testPreconditions = "Nil.";
        testGroups = "BAT";

        // Test steps
        prompt(twiki("---+++ " + testTitle + "<br><br>
           *Goal:* " + testGoal + "<br>
           *Pre-Requisites:* " + testPreconditions + "<br>
           *Tested Binary:* " + testBinary + "<br>

           | *Step* | *Verification* |
           | Launch " + testBinary + " | App launches normally |
           | select VoipDialer (1.1) in the Select dial service list box | verify that a status message is seen *VoipDialer (1.1)* | |
           | use number pad on dialog to enter number , eg 0123 | |
           | press the *call* button on dialog | verify that the new messages seen reflect the dialing states:<br><br>*Dialing 0123*<br>*Ringing*<br>*Connected* |
           | click the *hangup* button | verify that the new message seen reflects the dialing state:<br><br>*Hang up* |
       "));
    },

    Dial_Second_Voip_Number: function()
    {
          // Test meta data
          testTitle = "SFW - Browse Notes";
          testBinary = "qmldialer";
          testGoal = "Verify that the user can browse through all notes in the system.";
          testPreconditions = "Nil.";
          testGroups = "BAT";

          // Test steps
          prompt(twiki("---+++ " + testTitle + "<br><br>
              *Goal:* " + testGoal + "<br>
              *Pre-Requisites:* " + testPreconditions + "<br>
              *Tested Binary:* " + testBinary + "<br>

              | *Step* | *Verification* |
              | Launch " + testBinary + " | App launches normally |
              | select the VoipDialer (1.0) in the Select dial service list box | verify that a status message is seen *VoipDialer (1.0)* |
              | use number pad on dialog to enter number , eg 0123 | |
              | press the *call* button on dialog | verify that the new messages seen reflect the dialing states:<br><br>*Dialing 0123*<br>*Ringing*<br>*Connected* |
              | click the *hangup* button | verify that the new message seen reflects the dialing state:<br><br>*Hangup* |
        "));
    },

}

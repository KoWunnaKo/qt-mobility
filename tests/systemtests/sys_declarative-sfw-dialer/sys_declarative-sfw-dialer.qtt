/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt Mobility Components.
**
** $QT_BEGIN_LICENSE:LGPL$
** GNU Lesser General Public License Usage
** This file may be used under the terms of the GNU Lesser General Public
** License version 2.1 as published by the Free Software Foundation and
** appearing in the file LICENSE.LGPL included in the packaging of this
** file. Please review the following information to ensure the GNU Lesser
** General Public License version 2.1 requirements will be met:
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights. These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU General
** Public License version 3.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of this
** file. Please review the following information to ensure the GNU General
** Public License version 3.0 requirements will be met:
** http://www.gnu.org/copyleft/gpl.html.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms and
** conditions contained in a signed written agreement between you and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/serviceframework

testcase = {

    // Check installed Dialer services.
    Run_Test_Application: function()
    {
        prompt(twiki('*Run Test Application*

   * Run the qmldialer application
   * confirm that the above steps did not return an error ;
        '));
    },

    Dial_Landline_Number: function()
    {
        prompt(twiki('*Dial Landline number*

   * select the LandLineDialer in the Select dial service: list box
   * confirm that a status message is seen "LandlineDialer... (1.0)"
   * use number pad on dialog to enter number , eg 0123
   * press the call button on dialog
   * confirm that new messages seen reflect the dialing states:
      * Dialing 0123
      * Ringing
      * Connected
   * click the hangup button
   * confirm that new message seen is reflects the dialing state
      * Hangup
        '));
    },

    Dial_First_Voip_Number: function()
    {
        prompt(twiki('*Dial Voip 1.1 number*

   * select VoipDialer (1.1) in the Select dial service: list box
   * confirm that a status message is seen "VoipDialer (1.1)"
   * use number pad on dialog to enter number , eg 0123
   * press the "call" button on dialog
   * confirm that new messages seen reflect the dialing states:
      * Dialing 0123
      * Ringing
      * Connected
   * click the "hangup" button
   * confirm that new message seen is reflects the dialing state
      * Hang up
      * Connection terminated

       '));
    },

    Dial_Second_Voip_Number: function()
    {
        prompt(twiki('*Dial Voip 1.0 number*

   * select the VoipDialer (1.0) in the Select dial service: list box
   * confirm that a status message is seen "VoipDialer (1.0)"
   * use number pad on dialog to enter number , eg 0123
   * press the call button on dialog
   * confirm that new messages seen reflect the dialing states:
      * Dialing 0123
      * Ringing
      * Connected
   * clicking the hangup button
   * confirm that new message seen is reflects the dialing state
      * Hangup

        '));
    }

}

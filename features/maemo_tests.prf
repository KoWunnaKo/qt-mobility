# This file helps with installation of the tests for Maemo platforms so they can be included in the packages.
installtests.CONFIG = recursive
!contains(TEMPLATE, subdirs) {
    testcase|testplugin {
        # If the test has existing install rules, then we need to move them to the appropriate install path
        # It's a bit ugly, but ensures we get all the xml test data files
        !isEmpty(INSTALLS) {
            NL = $$escape_expand(\\n\\t)
            for(installItem, $$list($$INSTALLS)){
                eval(srcPath = $${installItem}.path)
                srcPath = $$eval($$srcPath)
                eval(srcFiles = $${installItem}.files)
                srcFiles = $$eval($$srcFiles)
                testplugin {
                    isEmpty(PLUGIN_TYPE) : error (PLUGIN_TYPE not set in $$__PRO_FILE__)
                    destPath = $$replace(srcPath, $$re_escape($$DESTDIR), \$(INSTALL_ROOT)$$[QT_INSTALL_PREFIX]/tests/qtm/plugins/$$PLUGIN_TYPE/)
                } testcase {
                    destPath = $$replace(srcPath, $$re_escape($$DESTDIR), \$(INSTALL_ROOT)$$[QT_INSTALL_PREFIX]/tests/qtm/)
                }
                installtests.commands += $(CHK_DIR_EXISTS) $${destPath} || $(MKDIR) $${destPath} $${NL}
                for(srcFile, $$list($$srcFiles)){
                    srcFile = $$basename(srcFile)
                    installtests.commands += $(MOVE) $(INSTALL_ROOT)$$srcPath/$$srcFile $${destPath} $${NL}
                }
            }
        }

        # Install the test binaries and plugins.
        testcase {
            target.path = $$[QT_INSTALL_PREFIX]/tests/qtm/
            INSTALLS += target
        } testplugin {
            target.path = $$[QT_INSTALL_PREFIX]/tests/qtm/plugins/$$PLUGIN_TYPE/
            INSTALLS += target
        }
    }
}

# if a test is marked as insignificant(is not critical test) then we want it to run in CITA but not cause a failure.
insignificant_test {
    !isEmpty(installtests.commands) : installtests.commands += $${NL}
    installtests.commands +=  echo  "insignificant_test"  >> \$(INSTALL_ROOT)$${target.path}/$${TARGET}.insignificant_test
}

# if a test is marked as manual then it needs to be ignored by CITA
manual_test {
    !isEmpty(installtests.commands) : installtests.commands += $${NL}
    installtests.commands +=  echo  "manual_test"  >> \$(INSTALL_ROOT)$${target.path}/$${TARGET}.manual_test
}
QMAKE_EXTRA_TARGETS += installtests

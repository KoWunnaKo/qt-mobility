/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of QtUiTest.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//TESTED_COMPONENT=src/messaging

// returns true if automated testing can be done, false manual testing is to be done
function automatedTestEnvironment(){
      //Automated testing not supported for this test case yet

      return false;

      //return (checkOS("symbian") || checkOS("maemo"));
      //return (checkOS("symbian") || checkOS("maemo") || checkOS("linux"));
}

testcase = {

    serviceAction_startQuit : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Write Message: Start and Quit
    1. Launch *serviceaction* application
    1. Verify that the UI is shown
    1. Verify that the UI layout is proper and usable on the specific device
    1. Exit the application, verify it exits properly without error
        '));
        }
    },


    serviceAction_sendplainTextMessage: function (){
        if (automatedTestEnvironment()){
        }else{
        prompt(twiki('---++++ ServiceAction: Send Message in Plain Text
    1. Launch *serviceeaction* application
    1. Fill in To, Subject, Content
    1. Click "Add attachment" menu item and select file(s) to attach
    1. Click on "Send" menu entry
    1. Check if the mail has been sent to the desired mailbox with the correct subject, body and complete attachment(s) 
        '));
        }
    },

    serviceAction_sendHTMLMessage : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ ServiceAction: Send Message in HTML
    1. Launch *serviceaction* application
    1. Fill in To, Subject, Content
    1. Click "Add attachment" menu item and select file(s) to attach
    1. Click on "Send as HTML" menu entry
    1. Check if the mail has been sent to the desired mailbox with the correct subject, body and complete attachment(s) 
        '));
        }
    },


    serviceAction_composeAndSend : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ ServiceAction: Compose and Send 
    1. Launch *serviceaction* application
    1. Fill in To, Subject, Content
    1. Click "Add attachment" menu item and select file(s) to attach
    1. Click on "Compose" menu entry
    1. On Windows, confirm that the Outlook mail client for Windows is now showing
    1. Click on the "Send" menu button in Outlook client, on other platforms, choose send from action
    1. Check if the mail has been sent to the desired mailbox with the correct subject, body and complete attachment(s) 
        '));
        }
    },

    writeMessage_startQuit : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Write Message: Start and Quit
    1. Launch *writemessage* application
    1. Verify that the UI is shown
    1. Verify that the UI layout is proper and usable on the specific device
    1. Exit the application, verify it exits properly without error
        '));
        }
    },


    writeMessage_sendSMS : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Write Message: Send SMS
    1. Launch *writemessage* application
    1. Choose *SMS* in *Account* field
    1. Fill in a known mobile phone number to *To* field
    1. Verify that the *Subject* field is disabled
    1. Fill in some random text to the body text area
    1. Verify that the *Add*/ *Remove* buttons are disabled for SMS
    1. Click on *Send*
    1. On the recever mobile phone, verify the correct SMS is received
        '));
        }
    },

    writeMessage_sendMMS : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Write Message: Send MMS
    1. Launch *writemessage* application
    1. Choose *MMS* in *Account* field
    1. Fill in a known mobile phone number to *To* field
    1. Fill in some random subject to *Subject* field
    1. Fill in some random text to the body text area
    1. Click on *Add* button to add an attachment file to the message
    1. Choose the attachment just added, click on *Remove* to remove it
    1. Click on *Add* button to add two more attachments file to the message
    1. Click on *Send*
    1. On the recever mobile phone, verify the correct MMS is received with attachments
        '));
        }
    },

    writeMessage_sendEmail : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Write Message: Send Email
    1. Create an Email account called *Email* on the device, verify it sends and receives email properly
    1. Launch *writemessage* application
    1. Choose *Email* in *Account* field
    1. Fill in a known email address to *To* field
    1. Fill in some random subject to *Subject* field
    1. Fill in some random text to the body text area
    1. Click on *Add* button to add an attachment file to the message
    1. Choose the attachment just added, click on *Remove* to remove it
    1. Click on *Add* button to add two more attachments file to the message
    1. Click on *Send*
    1. On the recever email client, verify the correct Email is received with attachments
        '));
        }
    },

    queryMessage_startQuit : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Query Message: Start and Quit
    Note: *querymessage* is a console application, it must be launched from command line, and the results are shown on command line only
    
    1. Launch *querymessage* application using command line
    1. Verify the application runs with no crash
    1. Exit the application, verify it exits properly without error
        '));
        }
    },

    queryMessage_queryMessage : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Query Message: Start and Quit
    Note: *querymessage* is a console application, it must be launched from command line, and the results are shown on command line only
    Currently the test is not available for Symbian platforms.

    1. Synchronize a set of test messages to the phone using Nokia Ovi Suite or an equal tool
    1. Launch *querymessage* application using command line
    1. Verify that the messages are properly queried and results are correct
    1. Exit the application, verify it exits properly without error
        '));
        }
    },

    keepInTouch_startQuit : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Keep In Touch: Start and Quit
    
    1. Launch *keepintouch* application using command line
    1. Verify the application runs with no crash
    1. Exit the application, verify it exits properly without error
        '));
        }
    },


    keepInTouch_queryContacts : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Keep In Touch: query contacts
    
    1. Synchronize a set of test messages sent on a range of dates from various contacts to the phone using Nokia Ovi Suite or an equal tool
    1. Launch *keepintouch* application using command line
    1. Select *Year* from *Contacted within the last* combo box
    1. Click on *Search*
    1. Verify that all contacts contacted in the last year are displayed
    1. Select *3 Months* from *Contacted within the last* combo box
    1. Click on *Search*
    1. Verify that all contacts contacted in the last three months are displayed
    1. Check the *But not in the last* checkbox
    1. Choose *Month* in the combo box next to the checkbox
    1. click on *Search*
    1. Verify that the contacts contacted in the last three months but not in the last month are shown
        '));
        }
    },

    keepInTouch_showMessages : function() {
     if (automatedTestEnvironment()){
     }else{
         prompt(twiki('---++++ Keep In Touch: show messages

    1. Synchronize a set of test messages sent on a range of dates from various contacts to the phone using Nokia Ovi Suite or an equal tool
    1. Launch *keepintouch* application using command line
    1. Select *Year* from *Contacted within the last* combo box
    1. Click on *Search*
    1. Verify that all contacts contacted in the last year are displayed
    1. Click on a contact name
    1. Verify the messages with the contact are shown
    1. Select one message
    1. Click on *Show* button and verify the message details are shown
    1. Go back and click on *Forward* button, verify the forward dialog is shown
     '));
     }
    },

    messagingEx_startQuit : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ MessageEx: Start and Quit
    1. Launch *messagingex* application
    1. Verify that the UI is shown
    1. Verify that the UI layout is proper and usable on the specific device
    1. Exit the application, verify it exits properly without error
        '));
        }
    },

    messagingEx_sendSMS : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ MessagingEx: Send SMS
    1. Launch *messagingEx* application
    1. Choose *SMS* in *Account* field
    1. Fill in a known mobile phone number to *To* field
    1. Fill in some random text to the body text area
    1. Click on *Send Message*
    1. On the recever mobile phone, verify the correct SMS is received
        '));
        }
    },

    messagingEx_storeSMS : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ MessagingEx: Store SMS
    1. Launch *messagingEx* application
    1. Choose *SMS* in *Account* field
    1. Fill in a known mobile phone number to *To* field
    1. Fill in some random text to the body text area
    1. Click on *Store Message*
    1. Verify the correct SMS is stored in the system
        '));
        }
    },

    messagingEx_sendMMS : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ MessagingEx: Send MMS
    1. Launch *messagingex* application
    1. Choose *MMS* in *Account* field
    1. Fill in a known mobile phone number to *To* field
    1. Fill in some random subject to *Subject* field
    1. Fill in some random text to the body text area
    1. Click on *Add Attachment* button to add an attachment file to the message
    1. Choose the attachment just added, click on *Remove Attachment* to remove it
    1. Click on *Add Attachment* button to add two more attachments file to the message
    1. Click on *Send Message*
    1. On the recever mobile phone, verify the correct MMS is received with attachments
        '));
        }
    },

    messagingEx_storeMMS : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ MessagingEx: Store MMS
    1. Launch *messagingex* application
    1. Choose *MMS* in *Account* field
    1. Fill in a known mobile phone number to *To* field
    1. Fill in some random subject to *Subject* field
    1. Fill in some random text to the body text area
    1. Click on *Add Attachment* button to add an attachment file to the message
    1. Choose the attachment just added, click on *Remove Attachment* to remove it
    1. Click on *Add Attachment* button to add two more attachments file to the message
    1. Click on *Store Message*
    1. Verify the correct MMS is stored with attachments
        '));
        }
    },

    messagingEx_sendEmail : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ messagingEx: Send Email
    1. Create an Email account called *Email* on the device, verify it sends and receives email properly
    1. Launch *messagingex* application
    1. Choose *Email* in *Account* field
    1. Fill in a known email address to *To* field
    1. Fill in some random subject to *Subject* field
    1. Fill in some random text to the body text area
    1. Click on *Add Attachment* button to add an attachment file to the message
    1. Choose the attachment just added, click on *Remove Attachment* to remove it
    1. Click on *Add Attachment* button to add two more attachments file to the message
    1. Click on *Send Message*
    1. On the recever email client, verify the correct Email is received with attachments
        '));
        }
    },

    messagingEx_storeEmail : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ messagingEx: Store Email
    1. Create an Email account called *Email* on the device, verify it sends and receives email properly
    1. Launch *messagingex* application
    1. Choose *Email* in *Account* field
    1. Fill in a known email address to *To* field
    1. Fill in some random subject to *Subject* field
    1. Fill in some random text to the body text area
    1. Click on *Add Attachment* button to add an attachment file to the message
    1. Choose the attachment just added, click on *Remove Attachment* to remove it
    1. Click on *Add Attachment* button to add two more attachments file to the message
    1. Click on *Store Message*
    1. Verify the correct Email is stored with attachments
        '));
        }
    },

    declarativeMessaging_startQuit : function() {
        if (automatedTestEnvironment()){
        }else{
            prompt(twiki('---++++ Declarative Messaging: Start and Quit
    1. Launch *declarativemessaging* application
    1. Verify that the UI is shown
    1. Verify that the UI layout is proper and usable on the specific device
    1. Exit the application, verify it exits properly without error
        '));
        }
    },

     declarativeMessaging_ShowDetails : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Declarative Messaging: Show Details

      1. Start declarativeMessaging application
      1. Verify that the sample messages are listed
      1. Randomly click on a sample message
      1. Verify that the message details are shown
          '));
          }
      },

     bluewheelMessaging_startQuit : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: Start and Quit

      1. Start blue wheel test application
      1. Verify the application is loaded properly
      1. Select Messaging from the list
      1. Verify the messaging test application is launched
          '));
          }
      },

      bluewheelMessaging_SMS_Compose : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: SMS Compose

      1. Start messaging test application
      1. select SMS tab
      1. Type in destination phone number
      1. Type in some content
      1. Click on Compose
      1. Verify the native SMS client program is launched
      1. Save draft and return
          '));
          }
      },
      bluewheelMessaging_SMS_Store : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: SMS Store

      1. Start messaging test application
      1. select SMS tab
      1. Type in destination phone number
      1. Type in some content
      1. Click on Store
      1. Verify the message has been stored in draft folder
          '));
          }
      },

      bluewheelMessaging_SMS_Send : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: SMS Send

      1. Start messaging test application
      1. select SMS tab
      1. Type in destination phone number
      1. Type in some content
      1. Click on Send
      1. Verify the message has been sent correctly
          '));
          }
      },

      bluewheelMessaging_Email_Compose : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: Email Compose

      1. Create at least one email account on the phone
      1. Start messaging test application
      1. select Email tab
      1. Select account for From, if necessary, change Settings by clicking on Settings
      1. Type in destination email address, together with To, CC, BCC
      1. Type in subject and some content
      1. Insert some attachments
      1. Click on Compose
      1. Verify the native Email client program is launched
      1. Save draft and return
          '));
          }
      },

      bluewheelMessaging_Email_Store : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: Email Store

      1. Create at least one email account on the phone
      1. Start messaging test application
      1. select Email tab
      1. Select account for From, if necessary, change Settings by clicking on Settings
      1. Type in destination email address, together with To, CC, BCC
      1. Type in subject and some content
      1. Insert some attachments
      1. Click on Store
      1. Verify the email is stored in the draft folder of selected account
          '));
          }
      },

      bluewheelMessaging_Email_Send : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: Email Send

      1. Create at least one email account on the phone
      1. Start messaging test application
      1. select Email tab
      1. Select account for From, if necessary, change Settings by clicking on Settings
      1. Type in destination email address, together with To, CC, BCC
      1. Type in subject and some content
      1. Insert some attachments
      1. Click on Send
      1. Verify the email has been sent to the receivers, including to, cc, and bcc
          '));
          }
      },

/*
    New tests proposed
      bluewheelMessaging_Email_Add_Attachments
      bluewheelMessaging_Email_Clear_Attachments
      bluewheelMessaging_Email_Store_with_Attachments
      bluewheelMessaging_Email_Send_with_Attachments
      bluewheelMessaging_Email_Settings_Add_Charsets
      bluewheelMessaging_Email_Settings_Clear_Charsets
      bluewheelMessaging_Email_Settings_Change_Bodytype
      bluewheelMessaging_Email_Send_cross_Charsets
      bluewheelMessaging_Email_Store_cross_Charsets
      bluewheelMessaging_Email_Compose_cross_Charsets
      bluewheelMessaging_Email_Send_cross_Bodytype
      bluewheelMessaging_Email_Store_cross_Bodytype
      bluewheelMessaging_Email_Compose_cross_Bodytype
      bluewheelMessaging_Email_ManageAccounts_Select_Account
      bluewheelMessaging_Email_ManageAccounts_Delete_Account
*/

      bluewheelMessaging_MMS_Compose : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: MMS Compose

      1. Start messaging test application
      1. select MMS tab
      1. Type in destination phone number
      1. Type in a subject and some content
      1. Insert some attachments
      1. Click on Compose
      1. Verify the native SMS client program is launched
      1. Save draft and return
          '));
          }
      },
      bluewheelMessaging_MMS_Store : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: MMS Store

      1. Start messaging test application
      1. select MMS tab
      1. Type in destination phone number
      1. Type in a subject and some content
      1. Insert some attachments
      1. Click on Store
      1. Verify the message has been stored in draft folder
          '));
          }
      },

      bluewheelMessaging_MMS_Send : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: MMS Send

      1. Start messaging test application
      1. select MMS tab
      1. Type in destination phone number
      1. Type in a subject and some content
      1. Insert some attachments
      1. Click on Send
      1. Verify the message has been sent correctly
          '));
          }
      },

/*
    New tests proposed
      bluewheelMessaging_MMS_Add_Attachments
      bluewheelMessaging_MMS_Clear_Attachments
      bluewheelMessaging_MMS_Store_with_Attachments
      bluewheelMessaging_MMS_Send_with_Attachments
*/

      bluewheelMessaging_Search_Accounts_By_Name : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: Search Accounts by Name

      1. Start Messaging test application
      1. Select Search Accounts tab
      1. Type in an account name, eg. sms, which is not case sensitive
      1. Click on Search
      1. Verify the correct accounts are found and shown in dialog
          '));
          }
      },

      bluewheelMessaging_Search_Accounts_By_Id : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: Search Accounts by Id

      1. Start Messaging test application
      1. Select Search Accounts tab
      1. Type in a full Id, case sensitive. You can find the Id strings by doing a search by name
      1. Click on Search
      1. Verify the correct accounts are found and shown in dialog
          '));
          }
      },

      bluewheelMessaging_Search_Messages : function() {
          if (automatedTestEnvironment()){
          }else{
              prompt(twiki('---++++ Blue Wheel Messaging: Search Messages

      1. Start Messaging test application
      1. Select Search Messsages tab
      1. Select a search type
      1. Fill in according parameters
      1. Click on Make Query
      1. Verify correct messages are found and shown
      1. Select an message and click on Show
      1. Answer Yes to open it in native client
      1. Verify the message is properly shown
      1. return to search results
      1. Select an message and click on Show
      1. Answer No to open it within the test application
      1. Verify the message is properly shown
      1. Repeat the test for each search type with random query parameters
          '));
          }
      },

*/
    New tests proposed
      bluewheelMessaging_Search_Messages_By_Type
      bluewheelMessaging_Search_Messages_By_Priority
      bluewheelMessaging_Search_Messages_By_Sender
      bluewheelMessaging_Search_Messages_By_Receipient_To
      bluewheelMessaging_Search_Messages_By_Receipient_CC
      bluewheelMessaging_Search_Messages_By_Receipient_BCC
      bluewheelMessaging_Search_Messages_By_Receipient_Any
      bluewheelMessaging_Search_Messages_By_Status
      bluewheelMessaging_Search_Messages_By_Subject
      bluewheelMessaging_Search_Messages_By_Timestamp
      bluewheelMessaging_Search_Messages_By_Receiption_Time
      bluewheelMessaging_Search_Messages_By_Folder
      bluewheelMessaging_Search_Messages_By_Account

      bluewheelMessaging_Search_Messages_Wildcard_Search
      
      bluewheelMessaging_Search_Messages_Search_SMS
      bluewheelMessaging_Search_Messages_Search_MMS
      bluewheelMessaging_Search_Messages_Search_Email
      bluewheelMessaging_Search_Messages_Search_Cross_Email_Account_Types

      bluewheelMessaging_Synchronize
      bluewheelMessaging_Send_Receive
      bluewheelMessaging_Show_Message_In_Native_Client
      bluewheelMessaging_Show_Message_In_This_App
      bluewheelMessaging_Show_Message_Attachments
      bluewheelMessaging_Show_Message_Properties
      bluewheelMessaging_Show_Message_Unread
      bluewheelMessaging_Show_Message_Reply
      bluewheelMessaging_Show_Message_Forward
      bluewheelMessaging_Show_Message_Edit
      bluewheelMessaging_Show_Message_Delete

      bluewheelMessaging_Search_Messages_Search_Cross_Email_Account_Types
*/
}

//TESTED_COMPONENT=src/location

testcase = {

    // Under construction

    initTestCase: function()
    {
    },

    init: {
        // If qtmobility.version < 1.1 && currentTest() != [ current_position | location_is_updated ]
            // skip("Test only for QtMobility 1.1 and greater");
    },

    current_position: function()
    {
        prompt(twiki('---+++ Position is detected
    1. Run the weatherinfo_with_location example (sources are in examples/weatherinfo).
    1. Verify that weather information for your local area is displayed.
        '));
    },

    location_is_updated: function()
    {
        prompt(twiki('---+++ Position changes are detected
    1. Run the fetchgooglemaps example (sources are in examples/fetchgooglemaps).
    1. Note the initial position displayed in the example.
    1. Move to a different location.
    1. Note the updated position displayed in the example.
    1. Verify that the new position in step 4 corresponds to the move in step 3 (i.e. if the device moved north, the new position should clearly indicate this).
       '));
    },


    // Landmarks

    store_and_load_a_landmark_data: {
        // Valid landmarks are -90~90 latitude, and -180~180 longitude
        landmark : ["landmark", "20", "120"]
    },

    store_and_load_a_landmark: function(name, latitude, longitude) {
        startApplication("landmarkbrowser");
        click("Add Landmark");
        enter("Latitude", latitude);
        enter("Longitude", longitude);
        enter("Name", name);
        click("Ok");
        prompt("Verify that the landmark record is created");
    },

    negative_store_and_load_a_landmark_data: {
        // Landmarks outside the ranges -90~90 latitude, and -180~180 longitude
        bad_landmark_lat : ["bad_landmark", "100", "120"],
        bad_landmark_long : ["bad_landmark", "80", "300"]
    },

    negative_store_and_load_a_landmark: function(name, latitude, longitude) {
        startApplication("landmarkbrowser");
        click("Add Landmark");
        enter("Latitude", latitude);
        enter("Longitude", longitude);
        enter("Name", name);
        expectMessageBox("Invalid"){
            click("Ok");
        }
        click("Ok");
        click("Cancel");
    },
/*
    landmarks_within_range_of_a_position: function() {    },

    create_edit_and_delete_a_landmark: function() {    },

    sorted_search_based_on_category: function() {    },

    sort_landmarks_in_alphabetical_and_nearest: function() {    },

    notification_on_landmark_changes: function() {    },

    enumerate_categories: function() {    },

    add_edit_and_delete_a_category: function() {    },

    notification_on_category_changes: function() {    },

*/

    // Maps and Navigation
/*
    request_route_from_one_GPS_location_to_another: function() {    },

    list_of_way_points: function() {    },

    distinguish_pedestrian_and_car_navigation: function() {    },

    request_landmarks_for_given_coordinate_with_reverse_geocoding: function() {    },

    find_matching_landmarks_for_given_search_criteria_with_geocoding: function() {    },

    displaying_a_map: function() {    },

    provide_map_for_given_coordinate: function() {    },

    zooming_support: function() {    },

    online_and_offline: function() {    }

*/
}  // end of testcase

